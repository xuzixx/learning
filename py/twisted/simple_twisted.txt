case_1: dl = defer.DeferredList(deferlist)
2015-02-10 09:32:03.259817
1
2
3
4
5
6
---test_dl_call_back
[(True, '1111111111'), (False, <twisted.python.failure.Failure <type 'exceptions.Exception'>>), (True, '3333333333'), (True, '4444444444'), (True, '5555555555'), (True, '6666666666')]
---test_dl_both_back
None
2015-02-10 09:32:07.273255
Unhandled error in Deferred:
Unhandled Error
Traceback (most recent call last):
    File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 783, in __bootstrap
    self.__bootstrap_inner()
    File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 810, in __bootstrap_inner
    self.run()
    File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py", line 763, in run
    self.__target(*self.__args, **self.__kwargs)
--- <exception caught here> ---
    File "/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/twisted/python/threadpool.py", line 191, in _worker
    result = context.call(ctx, function, *args, **kwargs)
    File "/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/twisted/python/context.py", line 118, in callWithContext
    return self.currentContext().callWithContext(ctx, func, *args, **kw)
    File "/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/twisted/python/context.py", line 81, in callWithContext
    return func(*args,**kw)
    File "simple_twisted.py", line 41, in test_print_line
    raise Exception
exceptions.Exception:
-------------------------------------------

case_2: dl = defer.DeferredList(deferlist, consumeErrors = True)
# consumeErrors 阻止错误在DeferredList包含的任何Deferred的链路上传播（普通创建的DeferredList不会影响结果在它的Deferred的callbacks和errbacks中传递）。
# 用这个选项在DeferedList中停止错误，将阻止“Unhandled error in Deferred”警告出现在DeferredList包含的没必要添加额外errbacks的Deferred中。
# 设置consumeErrors参数为true不会改变fireOnOneCallback或者fireOnOneErrback.

2015-02-10 09:36:25.620320
1
 2
 3
 4
 5
 6
 ---test_dl_call_back
 [(True, '1111111111'), (False, <twisted.python.failure.Failure <type 'exceptions.Exception'>>), (True, '3333333333'), (True, '4444444444'), (True, '5555555555'), (True, '6666666666')]
 ---test_dl_both_back
 None
 2015-02-10 09:36:30.630789
-------------------------------------------
case_2 + case_3:
2015-02-10 09:42:02.744553
1
2
3
---test_error_back
<type 'instance'>
class:[twisted.python.failure.Failure]
[Failure instance: Traceback: <type 'exceptions.Exception'>:
/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py:783:__bootstrap
/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py:810:__bootstrap_inner
/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py:763:run
--- <exception caught here> ---
/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/twisted/python/threadpool.py:191:_worker
/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/twisted/python/context.py:118:callWithContext
/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/twisted/python/context.py:81:callWithContext
simple_twisted.py:43:test_print_line
]
---test_error_end
4
---test_call_back : 1111111111
5
---test_call_back : 3333333333
6
---test_call_back : 4444444444
---test_call_back : 5555555555
---test_call_back : 6666666666
---test_dl_call_back
[(True, '1111111111'), (True, None), (True, '3333333333'), (True, '4444444444'), (True, '5555555555'), (True, '6666666666')]
---test_dl_both_back
None
2015-02-10 09:42:07.752998

-------------------------------------------

#dl = defer.DeferredList(deferlist, fireOnOneErrback = True)
#dl = defer.DeferredList(deferlist, consumeErrors = True, fireOnOneErrback = True)
case_4, case_5 : 一定不包含case_3,会触发 dl_的error_back
# fireOnOneCallback DeferredList会在有Deferred调用callback时立马调用自己的callback,然后DeferredList不做任何事儿了，忽略其他还没完成的Deferred
# fireOnOneErrback DeferredList会在有Deferred调用errback时立马调用自己的errback,然后DeferredList不做任何事儿了，忽略其他还没完成的Deferred

2015-02-10 09:46:35.780156
1
 2
 3
 4
---test_dl_error_back
<type 'instance'>
twisted.python.failure.Failure
[Failure instance: Traceback (failure with no frames): <class 'twisted.internet.defer.FirstError'>: FirstError[#1, [Failure instance: Traceback: <type 'exceptions.Exception'>:
/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py:783:__bootstrap
/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py:810:__bootstrap_inner
/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.py:763:run
--- <exception caught here> ---
/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/twisted/python/threadpool.py:191:_worker
/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/twisted/python/context.py:118:callWithContext
/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/twisted/python/context.py:81:callWithContext
simple_twisted.py:45:test_print_line
]]
]
---test_dl_error_end
---test_dl_both_back
None
2015-02-10 09:46:36.785099
5
6






